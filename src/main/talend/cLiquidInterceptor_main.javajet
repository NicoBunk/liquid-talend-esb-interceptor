//Copyright 2015 Paul Tegelaar
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
<%@ jet 
	imports="
	org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IElementParameter
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
    java.io.UnsupportedEncodingException
    java.net.URLEncoder		
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
        
//  http://jira.talendforge.org/browse/TESB-5241
	/*
   	 * change to use label + unique to make it unique but readable
   	 */
	IElementParameter param = node.getElementParameter("LABEL");
	if(param != null && !"__UNIQUE_NAME__".equals(param.getValue())){
		cid = (String)param.getValue()+"_"+cid;	
	}
	
	
	String destination = ElementParameterParser.getValue(node, "__Destination__");
	String hostname = ElementParameterParser.getValue(node, "__Hostname__");
	String port = ElementParameterParser.getValue(node, "__Port__");
	int logging = Integer.parseInt(ElementParameterParser.getValue(node, "__Logging__"));
	
	boolean enabled = false;
	
	
	switch(logging) {
		case 0:
			enabled = true;
		break;
		case 1:
			enabled = false;
		break;
		case 2:		
			String contextValue = ElementParameterParser.getValue(node, "__ContextValue__");		
			enabled = Boolean.parseBoolean(contextValue);
		break;		
	}
	
	
	String uri = "liquid://?enabled="+ enabled +"&destination=" + destination.replaceAll("^\"|\"$", "") + "&hostname=" + hostname.replaceAll("^\"|\"$", "") + "&port=" + port.replaceAll("^\"|\"$", "");
	
		
%>

intercept().to("<%=uri%>")
